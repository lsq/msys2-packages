name: check&build

on:
  schedule:
    - cron: "30 0/8 * * 0/3"
  workflow_dispatch:
  push:
    # branches: master
    paths:
      - README.md
      - .github/workflows/build.yml
      - build.sh

    
jobs:
  check_update:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        include: [
          { msystem: ucrt64, toolchain: ucrt-x86_64 }
          #,
          #{ msystem: mingw64, toolchain: x86_64 },
          #{ msystem: mingw32, toolchain: i686 }
          ]
      fail-fast: false

    # outputs:
    #   updateable: ${{ steps.check_update.outputs.updateable}}
    #   jobsinfo: ${{ steps.check_update.outputs.jobsinfo}}
    steps:
      -
        name: Configure git
        shell: cmd
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v5

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: mingw-w64-${{ matrix.toolchain }}-toolchain base-devel binutils git
          pacboy: >-
            aria2:p
            ca-certificates
          update: true
          path-type: inherit
          #location: C:\
          release: false

      - name: check update
        id: check_update
        run: |
          cd -- "$(cygpath -ua '${{ github.workspace }}')"
          sed -i 's|\(# SigLevel = Never\)|\1\n[mlsq]\nSigLevel = Optional\nServer = https://github.com/lsq/msys2-packages/releases/latest/download\n|' /etc/pacman.conf
          pacman -Syuu --noconfirm --overwrite '*'
          pacman -Syuu --noconfirm --overwrite '*'
          bash ./build.sh --report

      - name: build
        if: ${{ steps.check_update.outputs.updateable == 1 }}
        id: build
        run: |
          bash ./build.sh --build --report
        env:
          MINGW_ARCH: ${{ matrix.msystem }}
          PKGEXT: ".pkg.tar.zst"
          updateable: ${{steps.check_update.outputs.updateable}}
          jobsinfo: ${{steps.check_update.outputs.jobsinfo}}

      # - name: Delete old release assets
      #   uses: mknejp/delete-release-assets@v1
      #   with:
      #     # token: ${{ github.token }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: Latest# This may also be of the form 'refs/tags/staging'
      #
      #     # Optional another repository
      #     repository: owner/repo
      #
      #     # Pick one of:
      #     # 1. a single file name
      #     assets: changelog.txt
      #     # 2. a glob pattern (note the quotes if it begins with *)
      #     assets: '*.zip'
      #     # 3. multiple names/globs, one per line
      #     assets: |
      #       changelog.txt
      #       *.zip

      # https://github.com/marketplace/actions/create-release
      # https://github.com/marketplace/actions/create-update-github-release
      - name: Push changes
        if: ${{ env.pushflag == 1 }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          # force_with_lease: true

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        if: ${{ steps.check_update.outputs.updateable == 1 }}
        with:
          files: |
            files/*.pkg.tar.zst
            files/mlsq*
      #      ./DeviceTree.zip
      #    name: TWRP_Device_Tree-${{ github.run_id }}
          name: latest
      #    tag_name: ${{ github.run_id }}
          tag_name: latest
      #    body: DeviceTree for twrp
          body_path: gitlog.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
