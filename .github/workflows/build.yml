name: check&build

on:
  schedule:
    - cron: "30 0/8 * * 0/3"
  workflow_dispatch:
  push:
    branches: master
    paths:
      - README.md
      - .github/workflows/build.yml
      - build.sh

    
jobs:
  check_update:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        include: [
          { msystem: ucrt64, toolchain: ucrt-x86_64 }
          #,
          #{ msystem: mingw64, toolchain: x86_64 },
          #{ msystem: mingw32, toolchain: i686 }
          ]
      fail-fast: false

    outputs:
      updateable: ${{ steps.check_update.outputs.updateable}}
      jobsinfo: ${{ steps.check_update.outputs.jobsinfo}}
    steps:
      -
        name: Configure git
        shell: cmd
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: mingw-w64-${{ matrix.toolchain }}-toolchain base-devel binutils git
          pacboy: >-
            aria2:p
            ca-certificates
          update: true
          path-type: inherit
          #location: C:\
          release: false

      - name: check update
        id: check_update
        run: |
          cd -- "$(cygpath -ua '${{ github.workspace }}')"
          bash ./build.sh --report
  build:
    if: ${{ needs.check_update.outputs.updateable  == 1 }}

    defaults:
      run:
        shell: msys2 {0}

    strategy:
      matrix:
        include: [
          { msystem: ucrt64, toolchain: ucrt-x86_64 }
          #,
          #{ msystem: mingw64, toolchain: x86_64 },
          #{ msystem: mingw32, toolchain: i686 }
          ]
      fail-fast: false

    runs-on: windows-latest
    needs: check_update
    env:
      updateable: ${{needs.check_update.outputs.updateable}}
      jobsinfo: ${{needs.check_update.outputs.jobsinfo}}
    steps:
      - run: git config --global core.autocrlf false
        shell: cmd
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: mingw-w64-${{ matrix.toolchain }}-toolchain base-devel binutils git
          pacboy: >-
            aria2:p
            ca-certificates
          update: true
          path-type: inherit
          #location: C:\
          release: false

      - name: build
        id: build
        run: |
          # cd -- "$(cygpath -ua '${{ github.workspace }}')"
          bash ./build.sh --build --report
        env:
          MINGW_ARCH: ${{ matrix.msystem }}
          PKGEXT: ".pkg.tar.zst"
